#! /usr/bin/env bash

panic()
{
	echo "error: $@"
	exit 1
}

usage()
{
	echo "usage: $0 -d work_dir -n vm_name -k ks_file"
	exit 2
}

netinst_url="https://download.fedoraproject.org/pub/fedora/linux/releases/29/Everything/x86_64/iso/Fedora-Everything-netinst-x86_64-29-1.2.iso"

cmd_dir=$(dirname "$0") || panic "cannot get program directory"
root_dir="$cmd_dir/.."
data_dir="$root_dir/data"

debug_level=0
sparsify=0
ks_file="$data_dir/f29_minimal_xfce.ks"
work_dir=
name=
while getopts D:d:n:k:s opt; do
	case "$opt" in
	d)
		work_dir="$OPTARG";;
	n)
		name="$OPTARG";;
	k)
		ks_file="$OPTARG";;
	D)
		debug_level="$OPTARG";;
	s)
		sparsify=1;;
	\?)
		usage
		break;;
	esac
done
shift $((OPTIND - 1))

if [ "$debug_level" -ge 1 ]; then
	set -xv
fi

if [ -z "$work_dir" ]; then
	usage "no work directory specified"
fi
work_dir=$(realpath "$work_dir") || panic
if [ -z "$name" ]; then
	usage "no VM name specified"
fi
if [ -z "$ks_file" ]; then
	usage "no kickstart file specified"
fi
ks_file=$(realpath "$ks_file") || panic

if [ ! -f "$ks_file" ]; then
	panic "kickstart file is missing"
fi

cat <<- EOF
work directory: $work_dir
kickstart file: $ks_file
VM nane: $name
EOF

#exit

download_dir="$work_dir/downloads"
netinst_base=$(basename "$netinst_url") || panic "cannot get base name"
netinst_file="$download_dir/$netinst_base"
disk_file="$work_dir/$name.qcow2"
sparse_file="$work_dir/${name}_sparse.qcow2"
vmdk_file="$work_dir/$name.vmdk"
gzvmdk_file="$work_dir/$name.vmdk.gz"
vdi_file="$work_dir/$name.vdi"
gzvdi_file="$work_dir/$name.vdi.gz"

ks_base=$(basename "$ks_file") || \
  panic "cannot get base name"

for dir in "$work_dir" "$download_dir"; do
	if [ ! -d "$dir" ]; then
		mkdir "$dir" || panic "cannot make directory $dir"
		chmod a+rx "$dir"
	fi
done

if [ ! -f "$netinst_file" ]; then
	wget -O "$netinst_file" "$netinst_url" || \
	  panic "cannot download netinst"
fi

if [ ! -f "$disk_file" ]; then
	virt-install \
	  --name "$name" \
	  --memory 16384 \
	  --vcpus 4 \
	  --disk path=$disk_file,format=qcow2,size=16 \
	  --os-type linux \
	  --network bridge=virbr0 \
	  --graphics spice \
	  --location "$netinst_file" \
	  --initrd-inject "$ks_file" \
	  --extra-args "ks=file:/$ks_base" \
	  || panic "virt-install failed"
fi

ls -l "$disk_file"

if [ "$sparsify" -ne 0 ]; then
	virt-sparsify "$disk_file" "$sparse_file" || panic "cannot sparsify"
	mv "$sparse_file" "$disk_file" || panic "cannot move file"
fi

echo "Converting from QCOW2 to VDI"
if [ ! -f "$vdi_file" ]; then
	qemu-img convert -f qcow2 -O vdi \
	  "$disk_file" "$vdi_file" || \
	  panic "cannot convert image"
	ls -l "$vdi_file"
fi
echo "Compressing VDI image"
if [ ! -f "$gzvdi_file" ]; then
	gzip -c "$vdi_file" > "$gzvdi_file" || panic "cannot compress image"
	ls -l "$gzvdi_file"
fi

echo "Converting from QCOW2 to VMDK"
ls -l "$disk_file"
if [ ! -f "$vmdk_file" ]; then
	qemu-img convert -f qcow2 -O vmdk \
	  -o adapter_type=lsilogic,subformat=streamOptimized,compat6 \
	  "$disk_file" "$vmdk_file" || \
	  panic "cannot convert image"
	ls -l "$vmdk_file"
fi
echo "Compressing VMDK image"
if [ ! -f "$gzvmdk_file" ]; then
	gzip -c "$vmdk_file" > "$gzvmdk_file" || panic "cannot compress image"
	ls -l "$gzvmdk_file"
fi

exit

##########
  --cdrom "$netinst_file" \

